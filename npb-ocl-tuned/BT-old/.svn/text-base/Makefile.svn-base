SHELL=/bin/sh
BENCHMARK=bt
BENCHMARKU=BT

RT_FLAGS=
#RT_FLAGS+=-D DEBUG
#RT_FLAGS+=-D PROFILING

include ../config/make.def


OBJS =	bt.o \
	${COMMON}/c_print_results.o ${COMMON}/c_timers.o ${COMMON}/c_wtime.o ocl_runtime.o

include ../sys/make.common

CFLAGS+=-g

# npbparams.h is included by header.h
# The following rule should do the trick but many make programs (not gmake)
# will do the wrong thing and rebuild the world every time (because the
# mod time on header.h is not changed. One solution would be to 
# touch header.h but this might cause confusion if someone has
# accidentally deleted it. Instead, make the dependency on npbparams.h
# explicit in all the lines below (even though dependence is indirect). 

# header.h: npbparams.h

${PROGRAM}: config ${OBJS}
	#${CLINK} ${CLINKFLAGS} -L/opt/OpenCL/NVIDIA_GPU_Computing_SDK/OpenCL/common/lib/ -lOpenCL -o ${PROGRAM} ${OBJS} ${C_LIB}
	${CLINK} ${CLINKFLAGS} -L/opt/OpenCL/AMD-APP-SDK-v2.4-lnx64/lib/x86_64 -lOpenCL -o ${PROGRAM} ${OBJS} ${C_LIB}

ocl_runtime.o: ../../../ocl_runtime.c ../../../ocl_runtime.h
	#${CCOMPILE} ${CFLAGS} $(RT_FLAGS) -I/opt/OpenCL/NVIDIA_GPU_Computing_SDK/OpenCL/common/inc/ ../../../ocl_runtime.c
	${CCOMPILE} ${CFLAGS} $(RT_FLAGS) -I/opt/OpenCL/AMD-APP-SDK-v2.4-lnx64/include ../../../ocl_runtime.c

.c.o:
	#${CCOMPILE} ${CFLAGS} $(RT_FLAGS) -I/opt/OpenCL/NVIDIA_GPU_Computing_SDK/OpenCL/common/inc/ -I../../../ $<
	${CCOMPILE} ${CFLAGS} $(RT_FLAGS) -D OCLFILE="\"bt.$(CLASS).cl\"" -I/opt/OpenCL/AMD-APP-SDK-v2.4-lnx64/include -I../../../ $<
	#${CCOMPILE} ${CFLAGS} -I/opt/OpenCL/AMD-APP-SDK-v2.4-lnx64/include -I../../../nas.bt/ $<


bt.o:             bt.c  header.h npbparams.h

clean:
	- rm -f *.o *~ mputil*
	- rm -f  npbparams.h core
